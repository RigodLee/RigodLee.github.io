{"meta":{"title":"does","subtitle":"","description":"","author":"does","url":"http://yoursite.com","root":"/"},"pages":[{"title":"友链","date":"2020-06-07T11:53:53.000Z","updated":"2020-06-07T12:02:51.938Z","comments":true,"path":"link/index.html","permalink":"http://yoursite.com/link/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-06-07T11:52:05.000Z","updated":"2020-06-07T12:04:10.244Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-06-07T11:50:14.000Z","updated":"2020-06-07T12:02:58.132Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"music","date":"2020-06-16T04:34:19.000Z","updated":"2020-06-16T06:26:48.453Z","comments":true,"path":"music/index.html","permalink":"http://yoursite.com/music/index.html","excerpt":"","text":"var ap = new APlayer({ element: document.getElementById(\"aplayer-GMmfLKSj\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"绝对是个梦\", author: \"汤宝如\", url: \"http://music.163.com/song/media/outer/url?id=295844.mp3\", pic: \"http://p1.music.126.net/NvP0E5Ej94EQ1K3MbH7L3w==/18168330138187688.jpg?param=130y130\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); var options = {\"narrow\":false,\"autoplay\":true,\"showlrc\":3,\"mode\":\"random\",\"music\":[{\"title\":\"情人知己\",\"author\":\"叶倩文\",\"url\":\"http://music.163.com/song/media/outer/url?id=5258720.mp3\",\"pic\":\"http://p2.music.126.net/5yc6IEb-zl6GNNt9fY6g4g==/37383395361212.jpg?param=130y130\",\"lrc\":\"http://og9ocpmwk.bkt.clouddn.com/%E5%B9%B3%E5%87%A1%E4%B9%8B%E8%B7%AF.txt\"},{\"title\":\"梦伴\",\"author\":\"李悦君\",\"url\":\"http://music.163.com/song/media/outer/url?id=26584453.mp3\",\"pic\":\"http://p1.music.126.net/KWonqfsj39pd5_Yyf2bE6g==/109951163856433553.jpg?param=130y130\",\"lrc\":\"https://ogd99kckh.qnssl.com/%E9%87%8E%E5%AD%90.txt\"},{\"title\":\"一休\",\"author\":\"陈柏宇\",\"url\":\"http://music.163.com/song/media/outer/url?id=25918369.mp3\",\"pic\":\"http://p2.music.126.net/RzhGu8CU8i6cyj8mvaAXzQ==/18854425393134490.jpg?param=130y130\",\"lrc\":\"https://ogd99kckh.qnssl.com/%E9%87%8E%E5%AD%90.txt\"}]}; options.element = document.getElementById(\"aplayer-KASQlzLy\"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);"}],"posts":[{"title":"springmvc使用PathVariable路径匹配问题","slug":"springmvc使用@PathVariable路径匹配问题","date":"2020-06-16T10:32:53.158Z","updated":"2020-06-16T10:47:09.726Z","comments":true,"path":"2020/06/16/springmvc使用@PathVariable路径匹配问题/","link":"","permalink":"http://yoursite.com/2020/06/16/springmvc%E4%BD%BF%E7%94%A8@PathVariable%E8%B7%AF%E5%BE%84%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98/","excerpt":"","text":"1、问题今天学了springmvc的jsp页面传值 &lt;a href=”${pageContext.request.contextPath }/detail1?id=10001” &gt;通过参数传递ID&lt;/a&gt; &lt;a href=”${pageContext.request.contextPath }/detail2/10001.html” &gt;路径变量@pathvariable在路径上传递ID&lt;/a&gt; 通过参数传递数据，数据会直接出现在地址栏上，信息暴露不安全。而通过路径变量可以加上后缀，相对安全一点。这是代码结构，jt.jsp传参进入detail2这个controller，controller在控制台输出jsp传过来的参数后重定向到jt.jsp（jt.jsp中有引用到css、js和图片）。运行程序后，重定向的时候发现控制台成功打印jsp传进的参数，但是重定向后，页面的样式和图片丢失了。在springmvc的配置文件里有配置静态资源访问查看浏览器控制台发现，找不到样式文件和图片。文件的路径前多了/testpathvariable找不到文件 2、解决方法在网上找到的问题原因是因为引用静态文件的时候使用了相对路径。解决方法就是把引用修改为绝对路径。 123&lt;link rel=\"stylesheet\" href=\"$&#123;pageContext.request.contextPath &#125;/css/bootstrap.min.css\" type=\"text/css\" /&gt;&lt;link rel=\"stylesheet\" href=\"$&#123;pageContext.request.contextPath &#125;/css/jt.css\" type=\"text/css\" /&gt;&lt;script type=\"text/javascript\" src=\"$&#123;pageContext.request.contextPath &#125;/js/jt.js\" &gt;&lt;/script&gt;","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"SpringMVC","slug":"SpringMVC","permalink":"http://yoursite.com/tags/SpringMVC/"}]},{"title":"JSTL和EL表达式遍历List数组","slug":"JSTL和EL表达式遍历List数组","date":"2020-06-15T16:43:04.201Z","updated":"2020-06-16T00:55:44.807Z","comments":true,"path":"2020/06/16/JSTL和EL表达式遍历List数组/","link":"","permalink":"http://yoursite.com/2020/06/16/JSTL%E5%92%8CEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%81%8D%E5%8E%86List%E6%95%B0%E7%BB%84/","excerpt":"","text":"JSTL的jar包下载：https://share.weiyun.com/zDcHu70Q1、导包将JSTL的jar包放进web项目的lib文件夹下2、在jsp页面中引入JSTL的核心标签库1&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt; 3、使用foreach遍历List数组123&lt;c:forEach items=\"$&#123;persons&#125;\" var=\"person\"&gt; $&#123;person&#125;|&lt;/c:forEach&gt; items使用EL表达式拿到servlet传过来的数组var指定遍历数组的值，然后再用EL表达式取得var中的值。4、效果","categories":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/categories/JavaWeb/"}],"tags":[{"name":"JSTL","slug":"JSTL","permalink":"http://yoursite.com/tags/JSTL/"},{"name":"EL表达式","slug":"EL表达式","permalink":"http://yoursite.com/tags/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}]},{"title":"bootstrap快速开发响应式页面","slug":"bootstrap快速开发响应式页面","date":"2020-06-15T11:06:51.768Z","updated":"2020-06-15T12:19:19.998Z","comments":true,"path":"2020/06/15/bootstrap快速开发响应式页面/","link":"","permalink":"http://yoursite.com/2020/06/15/bootstrap%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91%E5%93%8D%E5%BA%94%E5%BC%8F%E9%A1%B5%E9%9D%A2/","excerpt":"","text":"最近在用 Bootstrap做网页，Bootstrap提供的样式和组件很多，开发简单的页面也基本够用了。虽然使用里面的样式可能不能完全满足需求，但是可以在Bootstrap提供的样式基础上，自己重新写属性覆盖，也比之前的CSS完全靠手写高效得多了。还有一点就是使用Bootstrap开发响应式页面真的非常方便，不用去自己写媒体查询，不用设置页面在各种设备下的样式。Bootstrap已经提供了相应的类，只需要直接引用就可以。 1、栅格系统栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，内容就可以放入这些创建好的布局中。Bootstrap 栅格系统的把列分为.col-xs-、.col-sm-、.col-md-、.col-lg-，分别对应手机(&lt;768px)、平板(≥768px)、中等屏幕电脑(≥992px)和大屏幕电脑(≥1200px)。其中出现的这些像素称为临界点，每当浏览器大小或屏幕尺寸从一个临界点到达另一个临界点时，相应的 CSS 类就会起作用，页面布局就会发生变化。列数的最大值为12列，大于12列会自动换行。详见下图：例如我们想给这个页面设置响应式，可以先在大屏幕和中等屏幕下给左边设置9列，右边设置3列。当屏幕变成小屏幕和超小屏幕时，把左边和右边都设置成12列，这时候右边的内容就会被顶到左边内容的底部。 2、容器在Bootstrap中页面内容和栅格系统需要包裹一个 .container 容器。Bootstrap提供了两个类。注意，由于 padding 等属性的原因，这两种容器类不能互相嵌套。 ① .container 类用于固定宽度并支持响应式布局的容器。 123&lt;div class=\"container\"&gt; ...&lt;/div&gt; 可以在CSS中使用媒体查询改写容器的最大宽度 123456/* 修改container的最大宽度1280 */@media screen and (min-width: 1280px)&#123; .container&#123; width:1280px; &#125;&#125; ② .container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。 123&lt;div class=\"container-fluid\"&gt; ...&lt;/div&gt; 3、Bootstrap安装①最简单的方式是直接在网页中引用内容分发网络（CDN）提供的 Bootstrap。 12345678&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"&gt;&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css\" integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\"&gt;&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;&lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; ②也可以下载Bootstrap压缩包，解压后导入项目，直接引用。Bootstrap目录结构：bootstrap/├── css/│ ├── bootstrap.css│ ├── bootstrap.css.map│ ├── bootstrap.min.css│ ├── bootstrap-theme.css│ ├── bootstrap-theme.css.map│ └── bootstrap-theme.min.css├── js/│ ├── bootstrap.js│ └── bootstrap.min.js└── fonts/├── glyphicons-halflings-regular.eot├── glyphicons-halflings-regular.svg├── glyphicons-halflings-regular.ttf├── glyphicons-halflings-regular.woff└── glyphicons-halflings-regular.woff2 这里写响应式页面只需要用到css，只要引入bootstrap.min.css 4、实战 Bootstrap版本：v3.3.7 编辑器：vscode 先设置一个容器，然后在容器里放上左边的文章列表和右边的侧边栏（这里在容器内又放了一个row是因为Bootstrap的col--类默认会有左右15px的padding值，放一个row可以去掉默认的padding值）然后给左边的文章列表设置中等屏幕下col-md-9占9列，小屏幕下col-sm-12占12列（大屏幕包括在中等屏幕，可以直接省略col-lg-9。超小屏幕同理）。给右边的侧边栏设置中等屏幕下col-md-3占3列，小屏幕下col-sm-12占12列（大屏幕包括在中等屏幕，可以直接省略col-lg-9。超小屏幕同理） 实现效果：大屏幕中等屏幕：小屏幕：超小屏幕 5、响应式显示和隐藏Bootstrap还提供了响应式显示和隐藏工具类：hidden-* (在指定设备lg、md、sm、xs下隐藏)visible-* (在指定设备lg、md、sm、xs下显示)具体实现如下 1234&lt;!-- 隐藏域 （在小屏幕下隐藏）--&gt;&lt;div class=\"hidden-xs\"&gt;&lt;/div&gt;&lt;!-- 显示域 （在大屏幕下显示）--&gt;&lt;div class=\"visible-lg\"&gt;&lt;/div&gt;","categories":[{"name":"Html","slug":"Html","permalink":"http://yoursite.com/categories/Html/"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/tags/JavaWeb/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://yoursite.com/tags/Bootstrap/"}]},{"title":"记录Hexo加github搭建博客过程中遇见的问题及解决方法","slug":"Hexo加github搭建博客过程中遇见的问题及解决方法","date":"2020-06-14T14:47:24.647Z","updated":"2020-06-16T10:36:58.059Z","comments":true,"path":"2020/06/14/Hexo加github搭建博客过程中遇见的问题及解决方法/","link":"","permalink":"http://yoursite.com/2020/06/14/Hexo%E5%8A%A0github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","excerpt":"","text":"前情提要使用Hexo和github搭建免费个人博客前提是先要安装好git、Node.js和Hexo。环境安装完成后，通过git在本地搭建Hexo博客，最后将博客托管到github即可。 一、git的安装出现的问题1、官网下载git速度很慢，使用百度网盘下载：链接: https://pan.baidu.com/s/1FcsQYR7cFNme7Y77pw4xiw 提取码: ftrp 2、配置SSH KEY时用命令 1ssh -T git@github.com 查看git认证是否配置成功时报错 “The authenticity of host &#39;github.com (13.250.117.223)&#39; can&#39;t be established.” 123456$ ssh -T git@github.com The authenticity of host 'github.com (13.250.177.223)' can't be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? Warning: Permanently added 'github.com,13.250.177.223' (RSA) to the list of known hosts. Permission denied (publickey). Are you sure you want to continue connecting (yes/no)? #这里直接输入yes回车 3、出现fatal:Could not read from remote repository.①如果没有在github的Settings中添加SHH KEY，去github添加即可。②如果在github中已经添加SHH KEY，把.shh文件夹中的id_rsa和id_rsa.pub两个文件删除，重新配置SHH KEY并添加到github就可以了。 二、Node.js出现的问题1、安装cnpm使用国内镜像、解决卡顿①以管理员身份运行命令提示符②换成阿里源下载 1npm config set registry https://registry.npm.taobao.org ③验证命令，返回http://registry.npm.taobao.org，则说明镜像配置成功。 1npm config get registry ④安装cnpm 1npm install -g cnpm --registry=https://registry.npm.taobao.org 2、npm一直停在”checking installable status”可能是旧的npm缓存与项目冲突或者修改过仓库源（阿里源之类的），解决的方法：① 1sudo npm cache clean ② 1npm config set registry https://registry.npm.taobao.org 三、安装Hexo和搭建本地Hexo博客1、执行命令hexo server，提示：Usage :hexo…提示找不到该指令在本地生成hexo模板后在输入hexo server启动服务器时，提示找不到server指令。这是因为Hexo3.0把服务器独立成了个别模块，所以不能直接使用hexo server，必须先安装hexo-server才可以使用。安装命令： 1$ npm install hexo-server --save 2、出现”Cannot GET/XXX”错误在Hexo博客中，出现Cannot GET/xxx错误便意味着xxx文件未被找到。Cannot GET/xxx错误本质是hexo server返回的一个404错误。①判断博客的public目录下xxx文件是否存在。（我的错误是 Cannot GET /，因此在public目录下寻找index.html是否存在。）②如果说index.html不存在，那么执行hexo c，hexo g重新生成一次，回到步骤1。③步骤2执行完后index.html仍不存在，执行npm audit fix，查看是否少了什么组件，通过npm install hexo-xxx-xxx安装即可。（我的hexo缺少了hexo-generator-index组件，因此执行npm install hexo-generator-index即可）④步骤3完成之后，执行hexo c，hexo g重新生成静态文件。 3、No Layout:index.html当使用hexo g命令时，编译过程会出现警告和错误信息。把错误信息中的hexo插件和组件安装完，即可解决问题。①使用命令查看hexo插件和组件的安装情况 12npm ls //查看hexo插件安装情况npm audit fix //查看hexo组件的安装情况 ②通过install命令安装缺失的包和组件 1npm install xxx --save //xxx为插件和组件名 如果安装完插件和组件，重新执行hexo g命令没有报错。而在启动Hexo服务器的时候页面还是空白的，查看博客目录下themes目录下的主题目录是否为空，为空的话是因为在使用hexo init命令在本地生成hexo模板的时候缺少组件或者插件，导致模板生成失败。在安装完插件或组件后，删除博客目录下的文件，重新使用hexo init命令生成模板。配置后打开http://localhost:4000/就不是空白了。","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"标签随机文字颜色和字体大小的实现方法","slug":"标签随机文字颜色和字体大小的实现方法","date":"2020-06-14T14:47:07.930Z","updated":"2020-06-14T15:55:04.574Z","comments":true,"path":"2020/06/14/标签随机文字颜色和字体大小的实现方法/","link":"","permalink":"http://yoursite.com/2020/06/14/%E6%A0%87%E7%AD%BE%E9%9A%8F%E6%9C%BA%E6%96%87%E5%AD%97%E9%A2%9C%E8%89%B2%E5%92%8C%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/","excerpt":"","text":"先上效果图：实现代码： 12345678910111213141516171819202122232425262728&lt;script type=\"text/javascript\"&gt; $(document).ready(function()&#123; var obj=$(\"#wrap a\");//获取a标签中的数据 function rand(num)&#123; //parseInt();将字符串转为整数 //Math.random()；生成随机数 return parseInt(Math.random()*num+1); &#125; function randomcolor()&#123; var str=Math.ceil(Math.random()*16777215).toString(16); if(str.length&lt;6)&#123; str=\"0\"+str; &#125; return str; &#125; for(len=obj.length,i=len;i--;)&#123; obj[i].style.left=rand(600)+\"px\";//标签左右间距 obj[i].style.top=rand(400)+\"px\";//标签上下间距 obj[i].className=\"color\"+rand(5); obj[i].style.zIndex=rand(5);//设置元素的堆叠顺序 obj[i].style.fontSize=rand(5)+18+\"px\";//随机字体大小这里是18-23 obj[i].style.color=\"#\"+randomcolor();//字体颜色 obj[i].style.padding=rand(15)+\"px\"; &#125; &#125;);&lt;/script&gt; html中直接在div设置id=”wrap”，用&lt;c:forEach&gt;遍历标签。","categories":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/categories/JavaWeb/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/tags/JavaWeb/"}]},{"title":"安卓Service和Broadcast实现简单的音乐播放器","slug":"安卓Service和Broadcast实现简单的音乐播放器","date":"2020-06-07T12:07:40.699Z","updated":"2020-06-07T14:09:12.050Z","comments":true,"path":"2020/06/07/安卓Service和Broadcast实现简单的音乐播放器/","link":"","permalink":"http://yoursite.com/2020/06/07/%E5%AE%89%E5%8D%93Service%E5%92%8CBroadcast%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/","excerpt":"","text":"做实验的时候使用Service和Broadcast实现了一个功能较为简单的音乐播放器，可以对音乐进行播放、暂停和停止。主要思路：1、使用Service在后台播放音乐2、Broadcast发送广播通知Activity更改界面程序运行界面： 图1 播放界面 图2 暂停界面 图3 停止界面 实现代码： 1、布局界面XML如下 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\"&gt; &lt;androidx.appcompat.widget.Toolbar android:id=\"@+id/musicbar\" android:layout_width=\"match_parent\" android:layout_height=\"60dp\" android:background=\"?attr/colorPrimary\" android:minHeight=\"?attr/actionBarSize\" android:theme=\"?attr/actionBarTheme\" app:navigationIcon=\"@drawable/logo\" app:titleTextColor=\"@color/white\" /&gt; &lt;View android:id=\"@+id/view\" android:layout_width=\"match_parent\" android:layout_height=\"100dp\" /&gt; &lt;ImageView android:id=\"@+id/photo\" android:layout_width=\"250dp\" android:layout_height=\"250dp\" android:layout_gravity=\"center\" android:layout_marginBottom=\"20dp\" app:srcCompat=\"@drawable/qielogo\" /&gt; &lt;TextView android:id=\"@+id/musictext\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_gravity=\"center\" android:layout_marginBottom=\"100dp\" android:text=\"暂无播放音乐\" android:textSize=\"28dp\" /&gt; &lt;LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:background=\"@color/white\" android:orientation=\"horizontal\"&gt; &lt;ImageButton android:id=\"@+id/start\" android:layout_width=\"90dp\" android:layout_height=\"90dp\" android:layout_weight=\"1\" android:background=\"@color/white\" android:scaleType=\"centerInside\" app:srcCompat=\"@drawable/start\" /&gt; &lt;ImageButton android:id=\"@+id/stop\" android:layout_width=\"90dp\" android:layout_height=\"90dp\" android:layout_weight=\"1\" android:background=\"@color/white\" android:scaleType=\"centerInside\" app:srcCompat=\"@drawable/stop\" /&gt; &lt;/LinearLayout&gt;&lt;/LinearLayout&gt; 2、主Acitivy如下 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192package com.example.test6;import androidx.appcompat.app.AppCompatActivity;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.TextView;public class Music extends AppCompatActivity &#123; TextView musictext; ImageView photo; ImageButton startbutton; Integer state = 2; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_music); IntentFilter inf = new IntentFilter(); inf.addAction(\"com.user.action\"); registerReceiver(broad,inf); musictext = findViewById(R.id.musictext); photo = findViewById(R.id.photo); startbutton = findViewById(R.id.start); ImageButton stopbutton = findViewById(R.id.stop); startbutton.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; switch (state)&#123; case 1: state = 2; break; default: state = 1; break; &#125; Log.v(\"当前状态\",\"1\"); Intent intent = new Intent(Music.this,MusicService.class); intent.putExtra(\"action\",state); startService(intent); Log.v(\"intent传值\",\"1\"); &#125; &#125;); stopbutton.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; Intent intent = new Intent(Music.this,MusicService.class); stopService(intent); &#125; &#125;); &#125; @Override protected void onDestroy() &#123; super.onDestroy(); unregisterReceiver(broad); &#125; public BroadcastReceiver broad = new BroadcastReceiver() &#123; @Override public void onReceive(Context context, Intent intent) &#123; int i = intent.getIntExtra(\"action\",-1); switch(i)&#123; case 1: musictext.setText(\"China-X\"); photo.setImageResource(R.drawable.yjtp); startbutton.setImageResource(R.drawable.pause); break; case 2: startbutton.setImageResource(R.drawable.start); musictext.setText(\"音乐暂停\"); break; case 3: state = 3; musictext.setText(\"暂无播放音乐\"); photo.setImageResource(R.drawable.qielogo); startbutton.setImageResource(R.drawable.start); break; &#125; &#125; &#125;;&#125; 3、Service类如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354package com.example.test6;import android.app.Service;import android.content.Intent;import android.media.MediaPlayer;import android.os.IBinder;import android.util.Log;public class MusicService extends Service &#123; public IBinder onBind(Intent intent)&#123; return null; &#125; private MediaPlayer mp; public void onCreate()&#123; super.onCreate(); &#125; public void onStart(Intent intent,int startId)&#123; super.onStart(intent,startId); int i = intent.getIntExtra(\"action\",0); if(i==1)&#123; if(null==mp) &#123; mp = MediaPlayer.create(this, R.raw.mymusic); mp.setOnCompletionListener(new MediaPlayer.OnCompletionListener() &#123; @Override public void onCompletion(MediaPlayer mp) &#123; stopSelf(); &#125; &#125;); &#125; mp.start(); &#125;else if(i==2)&#123; if(mp!=null&amp;&amp;mp.isPlaying())&#123; mp.pause(); &#125; &#125; Log.v(\"zhuangtai\",String.valueOf(i)); Intent in = new Intent(\"com.user.action\"); in.putExtra(\"action\",i); sendBroadcast(in); &#125; public void onDestroy()&#123; super.onDestroy(); mp.stop(); Intent in = new Intent(\"com.user.action\"); in.putExtra(\"action\",3); sendBroadcast(in); &#125;&#125;","categories":[{"name":"移动开发","slug":"移动开发","permalink":"http://yoursite.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"移动开发","slug":"移动开发","permalink":"http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"},{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-05-02T06:40:42.967Z","updated":"2020-06-15T12:18:48.751Z","comments":true,"path":"2020/05/02/hello-world/","link":"","permalink":"http://yoursite.com/2020/05/02/hello-world/","excerpt":"","text":"12345678public class does &#123; public static void main(String[] args)&#123; String name = \"does\"; int age = 23; String gender = \"male\"; String[] studyItem = new String[]&#123;\"Java\",\"JavaWeb\",\"ssm\",\"css+bootstrap\"&#125;; &#125;&#125;","categories":[],"tags":[{"name":"does","slug":"does","permalink":"http://yoursite.com/tags/does/"}]}],"categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"},{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/categories/JavaWeb/"},{"name":"Html","slug":"Html","permalink":"http://yoursite.com/categories/Html/"},{"name":"移动开发","slug":"移动开发","permalink":"http://yoursite.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"SpringMVC","slug":"SpringMVC","permalink":"http://yoursite.com/tags/SpringMVC/"},{"name":"JSTL","slug":"JSTL","permalink":"http://yoursite.com/tags/JSTL/"},{"name":"EL表达式","slug":"EL表达式","permalink":"http://yoursite.com/tags/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://yoursite.com/tags/JavaWeb/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://yoursite.com/tags/Bootstrap/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"移动开发","slug":"移动开发","permalink":"http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"},{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"does","slug":"does","permalink":"http://yoursite.com/tags/does/"}]}